{"ast":null,"code":"// src/api/api.js\n\nconst BASE_URL = 'http://localhost:3001'; // Assurez-vous que c'est le bon port\n\nconst api = {\n  fetchTenants: async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/tenants`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching tenants:', error);\n      throw error;\n    }\n  },\n  addTenant: async newTenant => {\n    try {\n      const response = await fetch(`${BASE_URL}/tenants`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTenant)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error adding tenant:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["BASE_URL","api","fetchTenants","response","fetch","ok","Error","json","error","console","addTenant","newTenant","method","headers","body","JSON","stringify"],"sources":["/Users/zakariahajji/Desktop/Location/real-estate-management/src/api/api.js"],"sourcesContent":["// src/api/api.js\n\nconst BASE_URL = 'http://localhost:3001'; // Assurez-vous que c'est le bon port\n\nconst api = {\n    fetchTenants: async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/tenants`);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching tenants:', error);\n            throw error;\n        }\n    },\n\n    addTenant: async (newTenant) => {\n        try {\n            const response = await fetch(`${BASE_URL}/tenants`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newTenant),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Error adding tenant:', error);\n            throw error;\n        }\n    },\n};\n\nexport default api;\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,MAAMC,GAAG,GAAG;EACRC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU,CAAC;MACnD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDE,SAAS,EAAE,MAAOC,SAAS,IAAK;IAC5B,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU,EAAE;QAChDY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;MAClC,CAAC,CAAC;MACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}